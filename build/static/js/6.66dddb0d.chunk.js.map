{"version":3,"sources":["Components/Screen/AddCategory/index.jsx"],"names":["AddCat","navigation","useNavigate","inputType","setInputType","useState","passwordVisible","setPasswordVisible","loading","setLoading","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","Cat","setCat","profileImage","setProfileImage","SelectedImg","setSelectedImg","Chanalsdata","setChanalsdata","channelLoading","setChannelLoading","loadingupload","setloadingupload","showSnackbar","message","severity","validationSchema","Yup","shape","cat","required","title","url","type","useEffect","async","categoryCollection","collection","firestore","categories","getDocs","docs","map","doc","id","data","error","console","getCategories","SelectImage","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","courseFile","uniqueFileName","Date","getTime","name","imageRef","ref","storage","uploadBytes","then","snapshot","getDownloadURL","uploadImage","_jsxs","_Fragment","children","_jsx","CustomSnackBar","open","onClose","handleSnackbarClose","Formik","initialValues","onSubmit","values","_ref","setSubmitting","categoryDocRef","value","categoryDoc","getDoc","exists","Error","categoryData","uniqueId","uuidv4","channelsCollection","docRef","addDoc","_id","imageUrl","category","sub","download","star","handleSubmit","_ref2","errors","touched","handleChange","handleBlur","Form","className","style","width","Group","controlId","Label","Select","onChange","Control","placeholder","disabled","flexDirection","cursor","position","htmlFor","Spinner","height","marginTop","borderWidth","top","right","zIndex","color","animation","role","src","alt","objectFit","borderRadius","fileavatar","InputStrap"],"mappings":"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","file":"static/js/6.66dddb0d.chunk.js","sourcesContent":["/* eslint-disable no-empty-pattern */\n/* eslint-disable no-unused-vars */\nimport { React, useEffect, useState } from \"react\";\nimport { Form, Spinner, Table } from \"react-bootstrap\";\nimport { Formik, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport closeEye from \"../../../assets/icon/close_eye.svg\";\nimport openEye from \"../../../assets/icon/open_eye.svg\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport CustomSnackBar from \"../../SnackBar/CustomSnackbar\";\n// import { setToken } from \"../../../store/reducer/AuthConfig\";\nimport { ToastMessage } from \"../../../utils/ToastMessage\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth, firestore, storage } from \"../../Firebase/Config\";\nimport fileavatar from \"../../../assets/images/profileavatar.jpg\";\nimport { Input as InputStrap } from \"reactstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport Snackbar, { SnackbarOrigin } from \"@mui/material/Snackbar\";\n\nimport { message } from \"antd\";\n\nimport { useDispatch } from \"react-redux\";\nimport {\n  setAuthenticated,\n  setToken,\n  setUser,\n} from \"../../../Redux/Slices/AuthSlice\";\nimport { getSingleDoc } from \"../../Firebase/FirbaseService\";\nimport {\n  addDoc,\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  setDoc,\n} from \"firebase/firestore\";\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\nimport DataTable from \"react-data-table-component\";\nimport ImageLoader from \"../../ImageLoader/ImageLoader\";\nconst AddCat = () => {\n  const navigation = useNavigate();\n  // const [state, setState] = React.useState({\n  //   open: false,\n  //   vertical: \"top\",\n  //   horizontal: \"center\",\n  // });\n\n  const [inputType, setInputType] = useState(\"password\");\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"info\");\n  const [Cat, setCat] = useState([]);\n  const [profileImage, setProfileImage] = useState(\"\");\n  const [SelectedImg, setSelectedImg] = useState(\"\");\n  const [Chanalsdata, setChanalsdata] = useState([]);\n  const [channelLoading, setChannelLoading] = useState(false);\n  const [loadingupload, setloadingupload] = useState(false);\n\n  const getCategories = async () => {\n    try {\n      // Reference to the 'category' collection\n      const categoryCollection = collection(firestore, \"category\");\n\n      // Fetch all documents in the collection\n      const categorySnapshot = await getDocs(categoryCollection);\n\n      // Extract data from each document\n      const categories = categorySnapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n\n      // Log and return the categories\n      setCat(categories);\n      return categories;\n    } catch (error) {\n      console.error(\"Error fetching categories:\", error);\n      throw error;\n    }\n  };\n\n  // snackbar\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n  const showSnackbar = (message, severity) => {\n    setSnackbarMessage(message);\n    setSnackbarSeverity(severity);\n    setSnackbarOpen(true);\n  };\n\n  const initialValues = {\n    cat: \"\",\n    title: \"\",\n    url: \"\",\n    type: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    cat: Yup.string().required(\"Category name is required\"),\n    title: Yup.string().required(\"Title is required\"),\n    url: Yup.string().required(\"Feed url is required\"),\n    type: Yup.string().required(\"Type is required\"),\n  });\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  const uploadImage = (courseFile) => {\n    if (!courseFile) return;\n    setloadingupload(true);\n\n    const currentDate = new Date();\n    const uniqueFileName = `${currentDate.getTime()}_${courseFile?.name}`;\n    const imageRef = ref(storage, `UserImages/${uniqueFileName}`);\n    uploadBytes(imageRef, courseFile).then((snapshot) => {\n      getDownloadURL(snapshot.ref).then((url) => {\n        showSnackbar(\"Image Added Sucessfully\", \"success\");\n        setProfileImage(url);\n        setloadingupload(false);\n      });\n    });\n  };\n\n  const SelectImage = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setSelectedImg(reader.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setSelectedImg(null);\n    }\n    if (file) {\n      uploadImage(file);\n    }\n  };\n\n  const handleSubmit = async (value) => {\n    setLoading(true);\n    try {\n      // Fetch the category object by categoryId\n      const categoryDocRef = doc(firestore, \"category\", value?.cat);\n      const categoryDoc = await getDoc(categoryDocRef);\n\n      if (!categoryDoc.exists()) {\n        setLoading(false);\n        throw new Error(\"Category not found\");\n      }\n\n      const categoryData = categoryDoc.data();\n      const uniqueId = uuidv4();\n\n      // Reference to the 'channels' collection\n      const channelsCollection = collection(firestore, \"Newchannels\");\n\n      // Add a new document with the channel details, including the category object\n      const docRef = await addDoc(channelsCollection, {\n        _id: uniqueId,\n        title: value?.title,\n        imageUrl: profileImage,\n        url: value?.url,\n        category: categoryData, // Including the full category object\n        sub: [],\n        type: value?.type,\n        download: [],\n        star: [],\n      });\n\n      navigation(\"/listCategory\");\n\n      showSnackbar(\"Podcast Added Sucessfully\", \"success\");\n\n      setLoading(false);\n\n      return docRef.id;\n    } catch (error) {\n      setLoading(false);\n      console.error(\"Error adding channel:\", error);\n      throw error;\n    }\n  };\n\n  // /\n\n  return (\n    <>\n      <CustomSnackBar\n        open={snackbarOpen}\n        message={snackbarMessage}\n        severity={snackbarSeverity}\n        onClose={handleSnackbarClose}\n      />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          handleSubmit(values);\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n          <Form\n            className=\"formHead\"\n            style={{ width: \"40%\" }}\n            onSubmit={handleSubmit}\n          >\n            <section className=\"bord\">\n              <Form.Group\n                className=\"mb-2 hideFocus2\"\n                controlId=\"formGroupEmail\"\n              >\n                <Form.Label className=\"lableHead\">Add Category</Form.Label>\n                {/* <Form.Control\n                  className=\"radius_12\"\n                  placeholder=\"Enter name\"\n                  name=\"cat\"\n                  value={values.cat}\n                /> */}\n\n                <Form.Select\n                  aria-label=\"Default select example\"\n                  className=\"radius_12\"\n                  name=\"cat\"\n                  value={values.cat}\n                  onChange={handleChange}\n                >\n                  {Cat.map((category) => (\n                    <option key={category.id} value={category.id}>\n                      {category.name}\n                    </option>\n                  ))}\n                </Form.Select>\n\n                {touched.cat && errors.cat && (\n                  <div className=\"errorMsg\">{errors.cat}</div>\n                )}\n\n                <Form.Label className=\"lableHead mt-3\">Add Title</Form.Label>\n\n                <Form.Control\n                  className=\"radius_12 \"\n                  placeholder=\"Title\"\n                  name=\"title\"\n                  value={values.title}\n                  onChange={handleChange}\n                />\n                {touched.title && errors.title && (\n                  <div className=\"errorMsg\">{errors.title}</div>\n                )}\n\n                <Form.Label className=\"lableHead mt-3\">Add Feed Url</Form.Label>\n                <Form.Control\n                  className=\"radius_12 \"\n                  placeholder=\"Url\"\n                  name=\"url\"\n                  value={values.url}\n                  onChange={handleChange}\n                />\n                {touched.url && errors.url && (\n                  <div className=\"errorMsg\">{errors.url}</div>\n                )}\n              </Form.Group>\n\n              <Form.Label className=\"lableHead mt-3\">Select Type</Form.Label>\n              <Form.Select\n                aria-label=\"Default select example\"\n                className=\"radius_12\"\n                name=\"type\"\n                value={values.type}\n                onChange={handleChange}\n              >\n                <option value=\"\" disabled>\n                  Select Type\n                </option>\n                <option value=\"Global\">Global</option>\n                <option value=\"Espanol\">Espanol</option>\n                <option value=\"Nigerians\">Nigerians</option>\n              </Form.Select>\n              {touched.type && errors.type && (\n                <div className=\"errorMsg\">{errors.type}</div>\n              )}\n              <div className=\"d-flex \" style={{ flexDirection: \"column\" }}>\n                <h6 className=\"lableHead mt-2 mb-2\">Upload Image</h6>\n                <div>\n                  <label\n                    style={{ cursor: \"pointer\", position: \"relative\" }}\n                    htmlFor=\"fileInput\"\n                    className=\"cursor-pointer\"\n                  >\n                    {loadingupload && (\n                      <Spinner\n                        style={{\n                          width: \"18px\",\n                          height: \"18px\",\n                          marginTop: \"3px\",\n                          borderWidth: \"0.15em\",\n                          position: \"absolute\",\n                          top: \"1.5rem\",\n                          right: \"2rem\",\n                          zIndex: \"99999\",\n                          color: \"red\",\n                        }}\n                        animation=\"border\"\n                        role=\"status\"\n                      >\n                        <span className=\"visually-hidden\">Loading...</span>\n                      </Spinner>\n                    )}\n                    {profileImage ? (\n                      <>\n                        <img\n                          src={profileImage}\n                          alt=\"Preview\"\n                          style={{\n                            width: \"100px\",\n                            height: \"100px\",\n                            objectFit: \"cover\",\n                            borderRadius: \"50%\",\n                            position: \"relative\",\n                          }}\n                          className=\"object-cover\"\n                        />\n                      </>\n                    ) : (\n                      <div className=\"border radius_50 flex justify-content-center items-center\">\n                        <img\n                          src={fileavatar}\n                          alt=\"Camera Icon\"\n                          width={80}\n                          height={80}\n                        />\n                      </div>\n                    )}\n                  </label>\n\n                  <InputStrap\n                    type=\"file\"\n                    // required\n                    id=\"fileInput\"\n                    className=\"visually-hidden\"\n                    onChange={SelectImage}\n                  />\n                </div>\n              </div>\n              <div className=\"d-flex flex-column w-50\">\n                <button\n                  disabled={loading}\n                  className={`loginBtn mt-3 ${loading ? \"disbalebtn\" : \"\"}`}\n                >\n                  {loading ? (\n                    <Spinner\n                      style={{\n                        width: \"18px\",\n                        height: \"18px\",\n                        marginTop: \"3px\",\n                        borderWidth: \"0.15em\",\n                      }}\n                      animation=\"border\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">Loading...</span>\n                    </Spinner>\n                  ) : (\n                    \"Submit\"\n                  )}\n                </button>\n              </div>\n            </section>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddCat;\n"],"sourceRoot":""}